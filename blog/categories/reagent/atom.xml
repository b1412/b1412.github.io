<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: reagent | Leon's Blog]]></title>
  <link href="http://blog.kidzhou.me/blog/categories/reagent/atom.xml" rel="self"/>
  <link href="http://blog.kidzhou.me/"/>
  <updated>2019-11-04T17:55:40+13:00</updated>
  <id>http://blog.kidzhou.me/</id>
  <author>
    <name><![CDATA[Leon Zhou]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Clojure Practice in 'Clojure Web Admin' - React-related projects in ClojureScript]]></title>
    <link href="http://blog.kidzhou.me/blog/2016/01/25/clojure-practice-in-clojure-web-admin-react-in-clojurescript/"/>
    <updated>2016-01-25T22:15:12+13:00</updated>
    <id>http://blog.kidzhou.me/blog/2016/01/25/clojure-practice-in-clojure-web-admin-react-in-clojurescript</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/b1412/clojure-web-admin">CWA</a>(Clojure Web Admin) uses React and Bootstrap3  as a view layer with Reagent &amp; Re-frame.</p>

<p>All the projects used in CWA are shwon as bellow:</p>

<ul>
<li><p><a href="https://reagent-project.github.io/index.html" title="https://reagent-project.github.io/index.html">Reagent</a></p>

<p>Reagent provides a minimalistic interface between ClojureScript and React.</p></li>
<li><p><a href="https://github.com/Day8/re-frame" title="https://github.com/Day8/re-frame">Re-frame</a></p>

<p> Re-frame is a pattern for writing SPAs in ClojureScript, using Reagent with workflow as bellow:</p></li>
</ul>


<pre><code>app-db  --&gt;  components  --&gt;  Hiccup  --&gt;  Reagent  --&gt;  VDOM  --&gt;  React  --&gt;  DOM
 ^                                                                              |
 |                                                                              v
 handlers &lt;-----  router  &lt;-----------------------  (dispatch [event-id  event params])
</code></pre>

<ul>
<li><p><a href="https://react-bootstrap.github.io" title="https://react-bootstrap.github.io">React-Bootstrap</a></p>

<p>  Bootstrap 3 components built with React.</p></li>
<li><p><a href="https://github.com/reagent-project/reagent-forms" title="https://github.com/reagent-project/reagent-forms">Reagent-forms</a></p>

<p> A ClojureScript library to provide form data bindings for Reagent.
 In CWA, we have create some high-level abstract field types to make your life easier including Image ,Attachment, Enum, Lookup,etc.</p></li>
</ul>


<pre><code class="clojurescript">(defmethod init-field :image
  [[_ {:keys [field id] :as attrs} :as component] {:keys [doc] :as opts}]
  (let [upload-path (reagent/atom
                     ((keyword (str (name id) ".path")) @doc))]
    (fn []
      [:div.form-group
            [:img {:src @upload-path :class "img-responsive"}]
            [show-on-click
             :trigger
             [Button {:bs-style "primary"}
              [FaIcon "upload"] ]
             :body [file-form
                    :image upload-path
                    :column-name id
                    :form-data doc]]])))

(defmethod bind :image
  [{:keys [field id fmt]} {:keys [get save! doc]}]
  {:value (let [value (or (get id) "")]
            value)
   :on-change #(save! id (-&gt;&gt; % (value-of) (format-type field)))})
</code></pre>

<p>ClojureScript is basicly the same as Clojure, functional concepts in ClojureScript are a very good match for React&rsquo;s vision of components and immutability. And reagent could be your good choice to use React as a view layer in ClojureScript</p>

<p>Recently Bootstrap has been the bread and butter of rapid web prototyping, we better  make most of the Bootstrap ecosystem. Funtunately, React-Bootstrap has rewritten most Bootstrap components with React. In addition, we can easily wrap the react-bootstrap with Reagent and have access to all the goodies and  we can wrap any other js libraries as well.</p>

<pre><code class="clojurescript">(def Button (reagent.core/adapt-react-class (aget js/ReactBootstrap "Button")))
(def TreeView (reagent.core/adapt-react-class js/TreeView))
</code></pre>

<p>With all the projects metioned above,front-end programming could become straightforward and fun!</p>
]]></content>
  </entry>
  
</feed>
